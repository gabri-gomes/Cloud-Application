# 1. Iniciar o Minikube novamente
minikube start

# 2. Redirecionar docker para o Minikube
eval $(minikube docker-env)

# 3. (Re)Construir imagens
docker build -t mycloud_backend ./backend
docker build -t mycloud_executor ./executor

# 4. Aplicar os YAMLs novamente
kubectl apply -f k8s/

# 5. Verificar se os pods estÃ£o prontos
kubectl get pods

# 6. Aceder ao app via NodePort (ex: http://localhost:30001)
minikube service backend --url



#1. Parar o cluster Minikube
minikube stop

#2. Apagar completamente o cluster
minikube delete
docker system prune -a --volumes


#3. Redefinir o Docker para o ambiente local (opcional, mas recomendado)
eval $(minikube docker-env -u)

#ðŸ”¥ 4. Apagar imagens manuais (se quiser liberar espaÃ§o)
docker rmi -f mycloud_backend mycloud_executor
docker image prune -a

#ðŸ§¼ 5. Limpar volumes nÃ£o usados (ex: /tmp/uploads, /tmp/jobs)
sudo rm -rf /tmp/uploads /tmp/jobs
docker volume prune



#new way 


minikube start

minikube addons enable metrics-server

eval $(minikube docker-env)

docker build -t mycloud_backend  ./backend
docker build -t mycloud_executor ./executor
docker build -t mycloud_worker   ./backend   # ou ./worker, conforme config

kubectl apply -f k8s/

kubectl get pods -o wide

kubectl port-forward svc/backend 5000:5000

#Abrir no browser 
http://localhost:5000

#Teste o autoscaling

for i in $(seq 1 20); do
  curl -s -F "username=alice" -F "job=@scripts/exemplo.py" \
       http://localhost:5000/submit-job &
done

#observe o HPA escalar

watch kubectl get hpa,pods
