apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 30001   # Acesso externo (NodePort para Minikube)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      serviceAccountName: backend-sa
      containers:
        - name: backend
          image: mycloud_backend:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_ENV
              value: production
            - name: SQLALCHEMY_DATABASE_URI
              value: postgresql://admin:admin@postgres:5432/my_cloud_db
            - name: PG_ADMIN_URL
              value: postgresql://admin:admin@postgres:5432/postgres
          volumeMounts:
            # monta o socket do Docker para permitir que o backend crie/rode containers
            - name: docker-socket
              mountPath: /var/run/docker.sock

            # pasta de uploads para salvar Dockerfiles e outros arquivos do usu√°rio
            - name: uploads
              mountPath: /app/uploads

            # pasta de jobs (se for usada pelo Celery ou outras partes do backend)
            - name: jobs
              mountPath: /app/jobs
      volumes:
        # volume para o socket do Docker (hostPath tipo Socket)
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
            type: Socket

        # volume para /app/uploads (hostPath tipo DirectoryOrCreate)
        - name: uploads
          hostPath:
            path: /tmp/uploads
            type: DirectoryOrCreate

        # volume para /app/jobs (hostPath tipo DirectoryOrCreate)
        - name: jobs
          hostPath:
            path: /tmp/jobs
            type: DirectoryOrCreate
