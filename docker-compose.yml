version: "3.8"

services:
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - my_cloud_network

  backend:
    image: mycloud_backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend:/app/backend       # monta o c√≥digo Flask (main.py, dashboard.html, app.js) em /app/backend
      - ./uploads:/app/uploads       # pasta onde o Flask grava uploads do utilizador
      - ./jobs:/app/jobs      
    ports:
      - "5000:5000"
    depends_on:
      - data_base
      - executor
      - redis
    networks:
      - my_cloud_network
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://admin:admin@data_base:5432/my_cloud_db
      - PG_ADMIN_URL=postgresql://admin:admin@data_base:5432/postgres

  worker:
    image: mycloud_worker:latest    # deve ser criado a partir de ./worker
    command: celery -A tasks worker --loglevel=info
    depends_on:
      - redis
      - backend
    networks:
      - my_cloud_network

  data_base:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: my_cloud_db
    ports:
      - "5432:5432"
    networks:
      - my_cloud_network

  executor:
    image: mycloud_executor:latest
    ports:
      - "8000:8000"
    deploy:
      replicas: 3    # Elasticidade (ainda manual)
      restart_policy:
        condition: on-failure
    networks:
      - my_cloud_network

networks:
  my_cloud_network:
    name: my_cloud_network
